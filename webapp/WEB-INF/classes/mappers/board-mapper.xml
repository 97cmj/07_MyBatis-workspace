<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boardMapper">

	<!-- BOARD 테이블로부터 조회된 ResultSet을 Board 객체로 가공해주는 resultMap 작성 (관례상 상단에 작성함) -->
	<resultMap id="boardResultSet" type="board">
		<result property="boardNo" column="BOARD_NO" />
		<result property="boardTitle" column="BOARD_TITLE" />
		<result property="boardWriter" column="USER_ID" />
		<result property="count" column="COUNT" />
		<result property="createDate" column="CREATE_DATE" />

		<result property="boardContent" column="BOARD_CONTENT" />
	</resultMap>
	<!-- BOARD_CONTENT 에 대한 맵핑값만 추가해줌 => selectList 수행 시 BOARD_CONTENT 를 제외한 
		나머지 컬럼들만 조회됨 => selectBoard 수행 시 BOARD_CONTENT 컬럼도 조회됨 -->


	<!-- VO 당 한개라고 생각하면 편하다. -->
	<resultMap id="replyResultSet" type="reply">
		<result property="replyNo" column="REPLY_NO" />
		<result property="replyWriter" column="USER_ID" />
		<result property="replyContent" column="REPLY_CONTENT" />
		<result property="createDate" column="CREATE_DATE" />
	</resultMap>





	<select id="selectListCount" resultType="_int">
		SELECT COUNT(*)
		FROM
		BOARD
		WHERE STATUS = 'Y'
	</select>

	<select id="selectList" parameterType="board"
		resultMap="boardResultSet">

		SELECT BOARD_NO
		, BOARD_TITLE
		, USER_ID
		, COUNT
		, CREATE_DATE
		FROM BOARD B
		JOIN MEMBER ON (BOARD_WRITER = USER_NO)
		WHERE B.STATUS =
		'Y'
		ORDER BY BOARD_NO DESC

	</select>

	<update id="increaseCount" parameterType="_int">
		UPDATE BOARD
		SET COUNT =
		COUNT + 1
		WHERE BOARD_NO = #{boardNo}
		AND STATUS = 'Y'
	</update>


	<select id="selectBoard" parameterType="_int"
		resultMap="boardResultSet">
		SELECT BOARD_NO
		, BOARD_TITLE
		, BOARD_CONTENT
		, USER_ID
		, COUNT
		, CREATE_DATE
		FROM BOARD B
		JOIN MEMBER ON (BOARD_WRITER = USER_NO)
		WHERE B.STATUS = 'Y'
		AND BOARD_NO = #{boardNo}
	</select>

	<select id="selectReplyList" parameterType="_int"
		resultMap="replyResultSet">

		SELECT REPLY_NO
		, USER_ID
		, REPLY_CONTENT
		, CREATE_DATE
		FROM REPLY R
		JOIN MEMBER ON (REPLY_WRITER = USER_NO)
		WHERE R.STATUS = 'Y'
		AND REF_BNO = #{boardNo}
		ORDER BY REPLY_NO DESC
	</select>


	<!--  
		* MyBatis의 동적 SQL (동적 쿼리)
		상황에 따라 분기 처리를 통해 SQL 문을 동적으로 만드는 것
		MyBatis의 핵심적인 기능 중 하나
		문법은 JSTL의 태그들과 거의 유사한 형태
	-->
	<select id="selectSearchCount" parameterType="hashmap" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD B
		JOIN MEMBER ON (BOARD_WRITER = USER_NO)
		WHERE B.STATUS = 'Y'
		<if test="condition == 'writer' "> 
			AND USER_ID
		</if>
		<if test="condition == 'title' ">
			AND BOARD_TITLE
		</if>
		<if test="condition == 'content' ">
			AND BOARD_CONTENT
		</if>
		LIKE '%' || #{keyword} || '%'
		
	</select>

	<select id="selectSearchList" parameterType="hashmap" resultMap="boardResultSet">
	
	SELECT BOARD_NO
		, BOARD_TITLE
		, USER_ID
		, COUNT
		, CREATE_DATE
		FROM BOARD B
		JOIN MEMBER ON (BOARD_WRITER = USER_NO)
		WHERE B.STATUS ='Y'
		
		<choose>
			<when test="condition == 'writer' ">
				AND USER_ID
			</when>
			
			<when test="condition == 'title' ">		
				AND BOARD_TITLE
			</when>
			
			<otherwise>
				AND BOARD_CONTENT
			</otherwise>	
		</choose>
		LIKE '%' || #{keyword} || '%'
		
		ORDER BY BOARD_NO DESC
	</select>

</mapper>